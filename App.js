import React, { useState } from "react";
import "katex/dist/katex.min.css";
import { BlockMath } from "react-katex";

export default function ChidiProjectsApp() {
  const [topic, setTopic] = useState("");
  const [project, setProject] = useState(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);

  function generateMathProject(topic) {
    const safeTopic = topic.trim() || "Mathematics Project";
    const title = `${safeTopic}`;

    const abstract = `This project explores the topic of "${safeTopic}" with a mathematical approach. The focus is on providing direct, clear, and precise answers with supporting equations.`;

    const objectives = [
      `To define the problem in mathematical terms related to ${safeTopic}.`,
      `To solve the problem step by step with proper justification.`,
      `To present equations and proofs clearly using mathematical notation.`,
      `To summarize findings in a straightforward manner.`,
    ];

    const exampleEquation = `E = mc^2`;
    const methodology = `The methodology involves setting up mathematical models, deriving equations, solving them systematically, and interpreting the results in relation to the topic.`;

    let content = `# ${title}\n\n`;
    content += `## Abstract\n${abstract}\n\n`;

    content += `## Objectives\n`;
    objectives.forEach((o, i) => (content += `${i + 1}. ${o}\n`));
    content += `\n`;

    content += `## Key Equation\n`;
    content += `${exampleEquation}\n\n`;

    content += `## Methodology\n${methodology}\n\n`;

    content += `## Conclusion\nThe project provides straightforward mathematical analysis of ${safeTopic}, highlighting equations, derivations, and results in a clear and bold format.\n\n`;

    content += `-- Generated by ChidiProjects.ai`;

    return {
      title,
      content,
      equation: exampleEquation,
    };
  }

  const handleGenerate = () => {
    setError(null);
    if (!topic.trim()) {
      setError("Please enter a project topic first.");
      return;
    }
    setLoading(true);
    setTimeout(() => {
      const out = generateMathProject(topic);
      setProject(out);
      setLoading(false);
    }, 500);
  };

  return (
    <div className="min-h-screen bg-gray-50 flex items-start justify-center p-6">
      <div className="max-w-5xl w-full bg-white shadow-2xl rounded-2xl overflow-hidden">
        <header className="flex items-center justify-between p-6 border-b bg-gray-100">
          <div className="flex items-center gap-4">
            <div className="w-12 h-12 bg-black text-white rounded-full flex items-center justify-center font-bold text-lg">CP</div>
            <div>
              <h1 className="text-2xl font-extrabold">chidiprojects.ai</h1>
              <p className="text-sm text-gray-600">Mathematics Project Generator with Clear Equations</p>
            </div>
          </div>
        </header>

        <main className="p-8 grid grid-cols-1 md:grid-cols-3 gap-6">
          <section className="md:col-span-1">
            <label className="block text-sm font-semibold mb-2">Mathematics Project Topic</label>
            <input
              value={topic}
              onChange={(e) => setTopic(e.target.value)}
              placeholder="e.g., Fourier Series Analysis"
              className="w-full rounded-md border p-3 mb-4 text-lg"
            />

            <div className="flex gap-2">
              <button
                onClick={handleGenerate}
                className="flex-1 bg-black text-white rounded-md py-3 font-bold text-lg hover:opacity-90 disabled:opacity-60"
                disabled={loading}
              >
                {loading ? "Generating..." : "Generate Project"}
              </button>
              <button
                onClick={() => {
                  setTopic("");
                  setProject(null);
                }}
                className="px-3 py-2 border rounded-md text-sm"
              >
                Reset
              </button>
            </div>

            {error && <div className="mt-4 text-red-600 text-sm">{error}</div>}
          </section>

          <section className="md:col-span-2">
            <div className="h-full border rounded-lg p-6 bg-white">
              {!project && (
                <div className="prose">
                  <h2 className="text-2xl font-bold">Ready to Generate</h2>
                  <p className="text-lg">Enter a mathematics project topic and click <strong>Generate Project</strong>. You will get bold, clear answers with equations displayed properly.</p>
                </div>
              )}

              {project && (
                <div>
                  <h2 className="text-2xl font-bold mb-4">{project.title}</h2>
                  <pre className="whitespace-pre-wrap text-lg leading-relaxed bg-gray-50 p-4 rounded-md border overflow-auto" style={{ maxHeight: "60vh" }}>
                    {project.content}
                  </pre>
                  <div className="mt-6">
                    <h3 className="font-bold text-lg mb-2">Equation Example</h3>
                    <BlockMath>{project.equation}</BlockMath>
                  </div>
                </div>
              )}
            </div>
          </section>
        </main>

        <footer className="p-4 border-t text-sm text-gray-600 bg-gray-100 text-center">
          © {new Date().getFullYear()} chidiprojects.ai — Focused on Mathematics Projects
        </footer>
      </div>
    </div>
  );
}